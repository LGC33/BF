<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Examples on The Bugs Framework</title>
    <link>https://usnistgov.github.io/BF/Examples/</link>
    <description>Recent content in Examples on The Bugs Framework</description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://usnistgov.github.io/BF/Examples/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CVE-2001-1141</title>
      <link>https://usnistgov.github.io/BF/Examples/CVE-2001-1141/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://usnistgov.github.io/BF/Examples/CVE-2001-1141/</guid>
      <description>CVE-2001-1141#BF Taxonomy Cause: Improper PRNG Algorithm (C md_rand - the secret PRNG state is updated with portion, as small as on byte, of the PRNG&#39;s previous output, which is not secret) Attributes: Function: Mixing (back into entropy pool) Algorithm: Hash Function ( SHA-1 used for PRNG output and to update its internal secret state) Used For: Generation (of cryptographic keying material - nonces, cryptographic keys) Pseudo-Randomness Requirement: Sufficicent Space Size and Unpredictability (can be predicted from previous value through brute force) Consequence: KMN&gt;Generate with IEX of future keying BF Description Use of improper PRNG algorithm (C md_rand uses SHA-1 for mixing back in the entropy pool portion, as small as one byte, of previous output to update PRNG’s state), allows generation of cryptographic keying material (nonces and cryptographic keys) that does not satisfy the sufficient space size and unpredictability (can be predicted from previous values through brute force) pseudo-randomness requirements, which leads to KMN&gt;Generate and IEX of future keying material.</description>
    </item>
    
    <item>
      <title>CVE-2001-1585</title>
      <link>https://usnistgov.github.io/BF/Examples/CVE-2001-1585/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://usnistgov.github.io/BF/Examples/CVE-2001-1585/</guid>
      <description>CVE-2001-1585#BF Taxonomy Cause: Missing Verification Step (challenge-response) in public key authentication Attributes: Verified Data: Any Secret/Public Data State: Transferred (over network) Algorithm: Digital Signature (not using such allows private key not to be verified by public key) Security Service: Identity Authentication Consequence: IEX BF Description Missing verification step (challenge-response) in public key authentication allows private key for digital signature not to be verified by public key, which leads to identity authentication failure and may be exploited for IEX.</description>
    </item>
    
    <item>
      <title>CVE-2002-1697</title>
      <link>https://usnistgov.github.io/BF/Examples/CVE-2002-1697/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://usnistgov.github.io/BF/Examples/CVE-2002-1697/</guid>
      <description>CVE-2002-1697#BF Taxonomy Causes: Insecure mode of operation (ECB) leads to Weak Encryption Algorithm(for same shared key produces same ciphertext from same plaintext) Attributes: Sensitive Data: Any (Credentials, Cryptographic, ...) Data State: Transferred (over network) Algorithm: Symmetric (that allows identifying patterns and data recovery) Security Service: Confidentiality Consequence: IEX of Sensitive Data BF Description Use of insecure mode of operation (ECB) leads to weak symmetric encryption algorithm (for same shared key produces same ciphertext from same plaintext) that allows identifying patterns and recovery of transferred (over network) sensitive data, which is confidentiality failure and IEX of that sensitive data.</description>
    </item>
    
    <item>
      <title>CVE-2007-5460</title>
      <link>https://usnistgov.github.io/BF/Examples/CVE-2007-5460/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://usnistgov.github.io/BF/Examples/CVE-2007-5460/</guid>
      <description>CVE-2007-5460#BF Taxonomy Cause: Weak Encryption Algorithm (XOR xipher with fixed key) Attributes: Sensitive Data: Credentials (PINs/passwords) Data State: Transferred (over network) Algorithm: Symmetric (that allows obtaining shared key, by sniffing or spoofing the docking process, and decryption) Security Service: Confidentiality Consequence: IEX of Sensitive Data credentials BF Description Use of weak encryption algorithm (XOR cipher with fixed key) allows obtaining the shared symmetric key (by sniffing or spoofing the docking process) and decryption of transferred (over network) credentials (PINs/passwords), which is confidentiality failure and IEX of sensitive data (PINs/passwords).</description>
    </item>
    
    <item>
      <title>CVE-2008-0141</title>
      <link>https://usnistgov.github.io/BF/Examples/CVE-2008-0141/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://usnistgov.github.io/BF/Examples/CVE-2008-0141/</guid>
      <description>CVE-2008-0141#BF Taxonomy Cause: Inadequate Entropy Sources (current date/time and user name) Attributes: Function: Mixing Algorithm: Concatenation Used For: Generation (of password) Randomness Requirement: Non-Inferable (time known from password reset time, name - from user register) Consequence: IEX leading to ATN (Authentication Fault) BF Description Inadequate entropy sources (date/time and user name) mixing using concatenation allow generation of passwords that do not satisfy the non-inferable randomness requirement (time known from password reset time, name - from user register), which may be exploited for IEX (of password), leading to ATN </description>
    </item>
    
    <item>
      <title>CVE-2008-4107</title>
      <link>https://usnistgov.github.io/BF/Examples/CVE-2008-4107/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://usnistgov.github.io/BF/Examples/CVE-2008-4107/</guid>
      <description>CVE-2008-4107#BF Taxonomy Cause: Improper PRNG Algorithms (not cryptographically strong PHP 5 rand and mt_rand) Attributes: Function: Generate (pseudo-random numbers) Algorithms: e.g., LCG or LSFR, Mersenne Twister Used For: Generation (of passwords) Pseudo-Randomness Requirement: Unpredictability/Indistinguishability and Prediction Resistance Consequence: IEX (of password), leading to ATN BF Description Improper PRNG algorithms (not cryptographically strong PHP 5 rand&gt; and mt_rand, based on algorithms such as LCG or LFSR, and Mersenne Twister) used to generate pseudo-random numbers, allow generation of passwords that do not satisfy the unpredictability/ indistinguishability and prediction resistance pseudo-randomness requirements and may be exploited for IEX of password, leading to ATN.</description>
    </item>
    
    <item>
      <title>CVE-2014-0160</title>
      <link>https://usnistgov.github.io/BF/Examples/CVE-2014-0160/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://usnistgov.github.io/BF/Examples/CVE-2014-0160/</guid>
      <description>CVE-2014-0160 – Heartbleed Buffer Overflow#BF Taxonomy#Fig 1. BF DVR bug from DVR–MAD–(MUS &amp;amp; MUS) chain of CVE-2014-0160 – Heartbleed Buffer Overflow - click on image for detailed view.
DVR (Verify)
Cause: Improper Operation - Missing Attributes: Mechanism: Quantity Source Code: Codebase (d1_both.c and t1_lib.c) Execution Space: Admin State: Transferred (via network) Consequence: Improper Data - Inconsistent Value (size) Brief Description:
Heartbleed is a vulnerability due to a bug in the OpenSSL that allows a server to read over the bounds of a buffer.</description>
    </item>
    
    <item>
      <title>CVE-2015-0204</title>
      <link>https://usnistgov.github.io/BF/Examples/CVE-2015-0204/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://usnistgov.github.io/BF/Examples/CVE-2015-0204/</guid>
      <description>CVE-2015-0204, 1637, 1067 (FREAK - Factoring attack on RSA-Export Keys)#BF Taxonomy An inner KMN leads to an inner ENC, which leads to an outer ENC. Inner KMN: Cause: Improper Offer of Weak Protocol (Export RSA – offered from MITM-tricked server and accepted by client) Attributes: Cryptographic Data: Keying Material (pair of private and public keys) Data State: Transferred (over network) Algorithm: Export RSA (512-bits key generation based on prime numbers, such that private key can be obtained from public key through factorization) Operation: Generate Consequence: IEX Keying Material (private key) Inner ENC: Causes: KMN Fault leads to Exposed Private Key Attributes: Sensitive Data: Cryptographic (Pre-Master Secret) Data State: Transferred (over network) Algorithm: Asymmetric (RSA) (that allows decryption of Pre-Master Secret using exposed private key and computation of Master Secret) Security Service: Confidentiality Consequence: IEX of Sensitive Data (Master Secret) Outer ENC: Causes: KMN Fault leads to Exposed Secret Key (Master Secret) Attributes: Sensitive Data: Credentials (passwords, credit cards) Data State: Transferred (over network) Algorithm: Symmetric (key is known) Security Service: Confidentiality Consequence: IEX of Sensitive Data (credentials) BF Description An inner KMN leads to an inner ENC, which leads to an outer ENC.</description>
    </item>
    
    <item>
      <title>CVE-2015-2141</title>
      <link>https://usnistgov.github.io/BF/Examples/CVE-2015-2141/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://usnistgov.github.io/BF/Examples/CVE-2015-2141/</guid>
      <description>CVE-2015-2141#BF Taxonomy Cause: Modification of Verification Algorithm by adding a step (blinding) Attributes: Verified Data: Any Secret/Public Data State: Transferred (over network) Algorithm: Digital Signature (Rabin-Williams) (that allows obtaining the private key in cases of incorrect unblinding) Security Service: Identity Authentication Consequence: IEX BF Description Modification of verification algorithm (digital signature, Rabin-Williams) by adding a step (blinding before signing) allows obtaining the private key in cases of incorrect unblinding, which leads to identity authentication failure and may be exploited for IEX.</description>
    </item>
    
    <item>
      <title>CVE-2016-1919</title>
      <link>https://usnistgov.github.io/BF/Examples/CVE-2016-1919/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://usnistgov.github.io/BF/Examples/CVE-2016-1919/</guid>
      <description>CVE-2016-1919#BF Taxonomy To be added. BF Description A KMN leads to an ENC. KMN: Use of weak algorithm (eCryptFS-key from password and stored TIMA key) allows generation of keying material (secret key) that can be obtained through brute force, which may be exploited for IEX of keying material (secret key). ENC: KMN fault leads to exposed secret key that allows decryption of stored (on disk) sensitive data, which is confidentiality failure and may be exploited for IEX of sensitive data.</description>
    </item>
    
    <item>
      <title>CVE-2018-20991</title>
      <link>https://usnistgov.github.io/BF/Examples/CVE-2018-20991/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://usnistgov.github.io/BF/Examples/CVE-2018-20991/</guid>
      <description>CVE-2018-20991 - Rust SmallVec Iterator Panic#BF Taxonomy#Fig 1. BF for CVE-2018-20991 – Rust Iterator Panic - click on image for detailed view.
MUS (Deallocate)
Cause: Improper Pointer - Dangling Pointer (to SmallVec) Attributes: Mechanism: Explicit Source Code: Standard Library (lib.rs) Execution Space: Userland Object Ownership: Shared Object Location: Heap Consequence: Memory Error - Double Free Fig 2. BF for the Bug in the Fix of CVE-2018-20991 - click on image for detailed view.</description>
    </item>
    
    <item>
      <title>CVE-2019-10748</title>
      <link>https://usnistgov.github.io/BF/Examples/CVE-2019-10748/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://usnistgov.github.io/BF/Examples/CVE-2019-10748/</guid>
      <description>CVE-2019-10748 – Sequelize SQL Injection#BF Taxonomy#Fig 1. BF for CVE-2019-10748 – Sequelize SQL Injection - click on image for detailed view.
DVL (Sanitize)
Cause: Improper Operation - Missing Attributes: Mechanism: Format Source Code: Codebase (query-generator.js) Execution Space: Local State: Transferred (via network) Object Location: Heap Consequence: Injection Error - Query Injection (SQL Injection) Brief Description:
Sequelize is an Object-Relational Mapper for Node.js. It supports Postgres, MySQL, MariaDB, SQLite, and Microsoft SQL Server; it facilitates transaction support, relations, and lazy loading.</description>
    </item>
    
    <item>
      <title>CVE-2020-5902</title>
      <link>https://usnistgov.github.io/BF/Examples/CVE-2020-5902/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://usnistgov.github.io/BF/Examples/CVE-2020-5902/</guid>
      <description>CVE-2020-5902 – BIG-IP TMUI RCE#BF Taxonomy#Fig 1. BF for CVE-2020-5902 – BIG-IP TMUI RCE - click on image for detailed view.
DVL (Validate)
Cause: Improper Operation - Missing Attributes: Mechanism: Format (e.g., via “.*\.\.;.*“ regular expression) Source Code: Codebase (login.jsp) Execution Space: Admin State: Transferred (via network) Consequence: Injection Error - File Injection (Path Traversal) Brief Description:
BIG-IP is a family of server-side products from F5 Inc.</description>
    </item>
    
    <item>
      <title>CVE-2021-21834</title>
      <link>https://usnistgov.github.io/BF/Examples/CVE-2021-21834/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://usnistgov.github.io/BF/Examples/CVE-2021-21834/</guid>
      <description>CVE-2021-21834 - Bad Allocation Chain#BF Taxonomy#Fig 1. BF for CVE-2021-21834. - click on image for detailed view.
DVR (Verify)
Cause: Improper Operation - Missing Attributes: Mechanism: Range Source Code: Third Party (Library box_code_base.c) Execution Space: Local Data State: Stored(“number of entries” read from file) Consequence: Improper Data Value - Inconsistent Value ( &gt; max 64-bit int ) TCM (Calculate)
Cause: Improper Data Value - Wrong Argument Value Attributes: Mechanism: Operator(Arithmetic: ‘*’) Source Code: Third Party (Library box_code_base.</description>
    </item>
    
    <item>
      <title>CVE-2021-23440</title>
      <link>https://usnistgov.github.io/BF/Examples/CVE-2021-23440/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://usnistgov.github.io/BF/Examples/CVE-2021-23440/</guid>
      <description>CVE-2021-23440 - Type Mismatch bypassing Input Validation#BF Taxonomy#Fig 1. First BF chain: Loose comparison misuse. - click on image for detailed view.
TCM (Evaluate)
Cause: Improper Operation - Wrong Attributes: Mechanism: Operator Source Code: Codebase Data Value Kind: Boolean Data Type Kind: Structured Consequence: Improper Data Value - Wrong Result Fig 2. Second BF chain: Conversion missing before loose comparison. - click on image for detailed view.</description>
    </item>
    
    <item>
      <title>CWE-468</title>
      <link>https://usnistgov.github.io/BF/Examples/CWE-468/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://usnistgov.github.io/BF/Examples/CWE-468/</guid>
      <description>CWE-468 - Incorrect Pointer Scaling#BF Taxonomy#Fig 1. BF for CWE-468. - click on image for detailed view.
TCV (Cast)
Cause: Improper Operation - Wrong Attributes: Mechanism: Pass In Source Code: Codebase Data Value Kind: Pointer Data Type Kind: Primitive Consequence: Improper Data Type - Wrong Type ( int instead of char ) NRS (Call)
Cause: Improper Data Type - Wrong Argument Type Attributes: Mechanism: Ad-hoc Bind Source Code: Codebase Entity: Function Data Type Kind: Primitive Consequence: Improper Function - Wrong Overloaded Function Bound ( +(int*,int) instead of +(char*,int) ) TCM (Calculate)</description>
    </item>
    
  </channel>
</rss>
